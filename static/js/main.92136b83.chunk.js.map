{"version":3,"sources":["components/Header/Header.jsx","components/TodoList/TodoList.jsx","components/Footer/FooterItem/FooterItem.jsx","components/Footer/Footer.jsx","App.js","index.js"],"names":["Header","onAddNewTodo","todos","useState","title","setTitle","prevTodos","usePrevious","useEffect","saveTitle","localStorage","getItem","className","onSubmit","e","preventDefault","newTodo","id","length","completed","value","onChange","target","setItem","type","placeholder","TodoList","onDeleteTodo","isChecked","setIsChecked","handleChange","name","checked","console","log","htmlFor","map","todo","idx","key","select","onClick","FooterItem","link","text","run","to","Footer","onAll","onActive","onCompleted","onClearAll","App","data","setTodos","JSON","stringify","saveTodos","parse","some","newTodos","filter","_","index","filteredByCompleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92136b83.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useState, useEffect } from 'react';\nimport { usePrevious } from 'react-hanger';\nimport PropTypes from 'prop-types';\n\nexport const Header = ({ onAddNewTodo, todos }) => {\n  const [title, setTitle] = useState('');\n  const prevTodos = usePrevious(todos);\n\n  useEffect(() => {\n    const saveTitle = localStorage.getItem('title');\n\n    if (saveTitle) {\n      setTitle(saveTitle);\n    }\n  }, []);\n\n  const onHandle = (e) => {\n    setTitle(e.target.value);\n\n    localStorage.setItem('title', title);\n  };\n\n  const addNewTodo = (e) => {\n    e.preventDefault();\n\n    const newTodo = {\n      id: prevTodos && prevTodos.length + 1,\n      title,\n      completed: false,\n    };\n\n    onAddNewTodo(newTodo);\n    setTitle('');\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form onSubmit={addNewTodo}>\n        <input\n          value={title}\n          onChange={onHandle}\n          // onKeyDown={(e) => {\n          //   if (e.key === 'Enter') {\n          //   }\n          // }}\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  onAddNewTodo: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    completed: PropTypes.bool.isRequired,\n  })),\n};\n","/* eslint-disable */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {Header} from \"../Header/Header\";\n\nexport const TodoList = ({ todos, onDeleteTodo }) => {\n  const [isChecked, setIsChecked] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target.value;\n\n    setIsChecked({\n      [name]: type === 'checkbox' ? checked : value,\n    });\n  };\n\n  console.log(isChecked);\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {todos && todos.map((todo, idx) => (\n          <li key={todo.id} className={todo.completed ? 'completed' : ''}>\n            <div className=\"view\">\n              <input\n                type=\"checkbox\"\n                className=\"toggle\"\n                checked={todo.select}\n                onChange={handleChange}\n              />\n              <label>{todo.title}</label>\n              <button\n                onClick={() => onDeleteTodo(idx)}\n                type=\"button\"\n                className=\"destroy\"\n              />\n            </div>\n            <input type=\"text\" className=\"edit\" />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nTodoList.propTypes = {\n  onDeleteTodo: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    completed: PropTypes.bool.isRequired,\n  })),\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport const FooterItem = ({ link, text, run }) => (\n  <Link\n    to={link}\n    className=\"basic\"\n    onClick={run}\n  >\n    {text}\n  </Link>\n);\n\nFooterItem.propTypes = {\n  link: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  run: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FooterItem } from './FooterItem/FooterItem';\n\nexport const Footer = ({ onAll, onActive, onCompleted, onClearAll }) => (\n  <footer className=\"footer\">\n    <span className=\"todo-count\">\n      3 items left\n    </span>\n\n    <ul className=\"filters\">\n      <FooterItem link=\"/all\" text=\"all\" run={onAll} />\n      <FooterItem link=\"/active\" text=\"active\" run={onActive} />\n      <FooterItem link=\"/completed\" text=\"completed\" run={onCompleted} />\n    </ul>\n\n    <button\n      onClick={onClearAll}\n      type=\"button\"\n      className=\"clear-completed\"\n    >\n      Clear completed\n    </button>\n  </footer>\n);\n\nFooter.propTypes = {\n  onAll: PropTypes.func.isRequired,\n  onActive: PropTypes.func.isRequired,\n  onCompleted: PropTypes.func.isRequired,\n  onClearAll: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Header } from './components/Header/Header';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Footer } from './components/Footer/Footer';\nimport data from './data/data.json';\n\nfunction App() {\n  const [todos, setTodos] = useState(data);\n  // const [isFooterVisible, setIsFooterVisible] = useState(true);\n  // const [isChecked, setIsChecked] = useState(false);\n\n  localStorage.setItem('todos', JSON.stringify(todos));\n\n  useEffect(() => {\n    const saveTodos = localStorage.getItem('todos');\n\n    if (saveTodos) {\n      setTodos(JSON.parse(saveTodos));\n    }\n  }, []);\n\n  const onAll = () => {\n    setTodos([...todos]);\n  };\n\n  const onActive = () => {\n    setTodos([...todos].filter(todo => (\n      todo.completed === false\n    )));\n  };\n\n  const onCompleted = () => {\n    const filteredByCompleted = [...todos]\n      .filter(todo => (todo.completed === true));\n\n    setTodos(filteredByCompleted);\n  };\n\n  const onClearAll = () => {\n    setTodos([]);\n  };\n\n  const addTodo = (newTodo) => {\n    if (todos && todos\n      .some(todo => (todo.title === newTodo.title))) {\n      return;\n    }\n\n    if (todos) {\n      setTodos([...todos, newTodo]);\n    }\n  };\n\n  const deleteTodo = (idx) => {\n    const newTodos = todos.filter((_, index) => index !== idx);\n\n    setTodos(newTodos);\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <Header todos={todos} onAddNewTodo={addTodo} />\n\n      <TodoList\n        todos={todos}\n        onDeleteTodo={deleteTodo}\n      />\n\n      <Footer\n        onAll={onAll}\n        onActive={onActive}\n        onCompleted={onCompleted}\n        onClearAll={onClearAll}\n      />\n\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    ,\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}