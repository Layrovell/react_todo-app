{"version":3,"sources":["components/Header/Header.jsx","components/TodoList/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/Footer/FooterItem/FooterItem.jsx","components/Footer/Footer.jsx","App.js","index.js"],"names":["Header","onAddNewTodo","todos","useState","title","setTitle","prevTodos","usePrevious","useEffect","saveTitle","localStorage","getItem","setItem","className","onSubmit","e","preventDefault","newTodo","id","length","completed","value","onChange","target","type","placeholder","TodoItem","todo","idx","onDeleteTodo","isChecked","setIsChecked","console","log","checked","onClick","TodoList","htmlFor","map","key","FooterItem","link","text","run","to","Footer","leftTodos","onActive","onCompleted","onClearAll","onAll","App","setTodos","isFooterVisible","setIsFooterVisible","saveTodos","JSON","parse","stringify","filter","t","some","newTodos","_","index","active","clearCompleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e7325cd.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useState, useEffect } from 'react';\nimport { usePrevious } from 'react-hanger';\n// import PropTypes from 'prop-types';\n\nexport const Header = ({ onAddNewTodo, todos }) => {\n  const [title, setTitle] = useState('');\n  const prevTodos = usePrevious(todos);\n\n  useEffect(() => {\n    const saveTitle = localStorage.getItem('title');\n\n    if (saveTitle) {\n      setTitle(saveTitle);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('title', title);\n  }, [title]);\n\n  const onHandle = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const addNewTodo = (e) => {\n    e.preventDefault();\n//...\n    const newTodo = {\n      id: prevTodos && prevTodos.length + 1,\n      title,\n      completed: false,\n    };\n\n    onAddNewTodo(newTodo);\n    setTitle('');\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form onSubmit={addNewTodo}>\n        <input\n          value={title}\n          onChange={onHandle}\n          // onKeyDown={(e) => {\n          //   if (e.key === 'Enter') {\n          //   }\n          // }}\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    </header>\n  );\n};\n//\n// Header.propTypes = {\n//   onAddNewTodo: PropTypes.func.isRequired,\n//   title: PropTypes.string.isRequired,\n//   todos: PropTypes.arrayOf(PropTypes.shape({\n//     id: PropTypes.number.isRequired,\n//     title: PropTypes.string,\n//     completed: PropTypes.bool.isRequired,\n//   })),\n// };\n","/* eslint-disable */\nimport React, { useState } from 'react';\n\nexport const TodoItem = ({ todo, idx, onDeleteTodo }) => {\n  const [isChecked, setIsChecked] = useState('');\n  console.log(todo)\n\n  return (\n    <li className={todo.completed || isChecked ? 'completed' : ''}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={isChecked}\n          onChange={() => setIsChecked(!isChecked)}\n        />\n        <label>{todo.title}</label>\n        <button\n          onClick={() => onDeleteTodo(idx)}\n          type=\"button\"\n          className=\"destroy\"\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  )\n}\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from './TodoItem/TodoItem';\n\nexport const TodoList = ({ todos, onDeleteTodo }) => {\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <ul className=\"todo-list\">\n        {todos && todos.map((todo, idx) => (\n          <TodoItem key={idx} todo={todo} idx={idx} onDeleteTodo={onDeleteTodo} />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nTodoList.propTypes = {\n  onDeleteTodo: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    completed: PropTypes.bool.isRequired,\n  })),\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport const FooterItem = ({ link, text, run }) => (\n  <Link\n    to={link}\n    className=\"basic\"\n    onClick={run}\n  >\n    {text}\n  </Link>\n);\n\nFooterItem.propTypes = {\n  link: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  run: PropTypes.func.isRequired,\n};\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FooterItem } from './FooterItem/FooterItem';\n\nexport const Footer = ({ leftTodos, onActive, onCompleted, onClearAll, onAll }) => {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {leftTodos}\n        {' '}\n        items left\n      </span>\n\n      <ul className=\"filters\">\n        <FooterItem link=\"/all\" text=\"all\" run={onAll} />\n        <FooterItem link=\"/active\" text=\"active\" run={onActive} />\n        <FooterItem link=\"/completed\" text=\"completed\" run={onCompleted} />\n      </ul>\n\n      <button\n        onClick={onClearAll}\n        type=\"button\"\n        className=\"clear-completed\"\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  onAll: PropTypes.func.isRequired,\n  onActive: PropTypes.func.isRequired,\n  onCompleted: PropTypes.func.isRequired,\n  onClearAll: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Header } from './components/Header/Header';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Footer } from './components/Footer/Footer';\n// import data from './data/data.json';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [isFooterVisible, setIsFooterVisible] = useState(false);\n\n  useEffect(() => {\n    const saveTodos = localStorage.getItem('todos');\n\n    if (saveTodos) {\n      setTodos(JSON.parse(saveTodos));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n\n    if (todos.length > 0) {\n      setIsFooterVisible(true);\n    } else {\n      setIsFooterVisible(false);\n    }\n\n    setIsFooterVisible(todos.length > 0);\n  }, [todos]);\n\n  const onAll = () => {\n    setTodos(todos);\n  };\n\n  const onActive = () => {\n    const active = [...todos].filter(t => !t.completed);\n\n    setTodos(active);\n  };\n\n  const onCompleted = () => {\n    const completed = [...todos].filter(t => t.completed);\n\n    setTodos(completed);\n  };\n\n  const onClearAll = () => {\n    const clearCompleted = [...todos].filter(t => !t.completed);\n\n    setTodos(clearCompleted);\n  };\n\n  const addTodo = (newTodo) => {\n    if (todos && todos\n      .some(todo => (todo.title === newTodo.title))) {\n      return;\n    }\n\n    if (newTodo.title) {\n      setTodos([...todos, newTodo]);\n    }\n  };\n\n  const deleteTodo = (idx) => {\n    const newTodos = todos.filter((_, index) => index !== idx);\n\n    setTodos(newTodos);\n  };\n\n  const leftTodos = [...todos].filter(t => t.completed).length;\n\n  return (\n    <section className=\"todoapp\">\n      <Header todos={todos} onAddNewTodo={addTodo} />\n\n      <TodoList\n        todos={todos}\n        onDeleteTodo={deleteTodo}\n      />\n\n      {isFooterVisible && (\n        <Footer\n          leftTodos={leftTodos}\n          onAll={onAll}\n          onActive={onActive}\n          onCompleted={onCompleted}\n          onClearAll={onClearAll}\n        />\n      )}\n\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    ,\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}